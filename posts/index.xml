<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<<<<<<< HEAD
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
=======
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
>>>>>>> 43d39f0 (A new theme)
  <channel>
    <title>Posts on Jingwei&#39;s</title>
    <link>https://leijingwei.com/posts/</link>
    <description>Recent content in Posts on Jingwei&#39;s</description>
<<<<<<< HEAD
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Copyright [Jingwei&#39;s](https://leijingwei.com)</copyright>
    <lastBuildDate>Wed, 05 Oct 2022 08:05:05 +0300</lastBuildDate><atom:link href="https://leijingwei.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploy Your Blog with Jenkins</title>
      <link>https://leijingwei.com/posts/deploy-your-blog-with-jenkins-automatically/</link>
      <pubDate>Wed, 05 Oct 2022 08:05:05 +0300</pubDate>
      
      <guid>https://leijingwei.com/posts/deploy-your-blog-with-jenkins-automatically/</guid>
      <description>As you know, I built my blog with Hugo, and publish my static html file to github.
I used to use github pages as my server to run my blog before, but it&amp;rsquo;s really slowly when the visitors visting from China.
So I changed my mind, I bought a server located at HongKong.
It&amp;rsquo;s a Debian 11 server with nginx installed.
Step 1: Install Jenkins There are a lot ways to install Jenkins, but I am using the following commands for my Debian OS.</description>
    </item>
    
    <item>
      <title>How to Use ffmpeg</title>
      <link>https://leijingwei.com/posts/how-to-use-ffmpeg/</link>
      <pubDate>Thu, 16 Jun 2022 23:57:31 +0800</pubDate>
      
      <guid>https://leijingwei.com/posts/how-to-use-ffmpeg/</guid>
      <description>ffmpeg -version ffmpeg -i input.mp3 -t 30 output.mp3 ffmpeg -i input.mp3 -ss 00:00:04 -t 30 output.mp3 </description>
    </item>
    
    <item>
      <title>Part1 Get Start</title>
      <link>https://leijingwei.com/posts/django/part1-get-start/</link>
      <pubDate>Sun, 09 Jan 2022 09:18:33 +0300</pubDate>
      
      <guid>https://leijingwei.com/posts/django/part1-get-start/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Django初学者完整指南</title>
      <link>https://leijingwei.com/posts/complete-beginners-guide-to-django/</link>
      <pubDate>Sun, 09 Jan 2022 08:05:05 +0300</pubDate>
      
      <guid>https://leijingwei.com/posts/complete-beginners-guide-to-django/</guid>
      <description>这是开始学习 Django 的完整初学者指南。 材料分为七个部分。 我们将详细探讨所有基本概念，从安装、开发环境的准备、模型、视图、模板、URL 到更高级的主题，如迁移、测试和部署。 本系列教程采用最新的Django 4.0，Python3.8.x作为开发环境，大部分内容参考：beiginners-guide , 因为原文版本太老，而且是英文的，所以我用中文重新写一遍，方便大家。
本指南分为以下几个部分：
Part 1 - 开始
介绍 为什么用Django 谁在用Django 安装 安装Python3.8.9 安装Virtualenv 安装Django4.0 创建项目 Django应用 Hello World 总结 Part 2 - 基本配置
介绍 本项目 用例图 类图 线条 模型 迁移模型 试验模型API 模型操作概括 视图，模板和静态文件 django模板引擎 测试首页 静态文件设置 Django默认admin后台介绍 总结 Part 3 - 高级概念
介绍 基本路由URLs 高级路由URLs 使用路由API URL Patterns 复用模板 表单 如何不用表单 测试表单视图 创建表单的正确方式 渲染bootstrap表单 复用表单模板 增加更多测试 总结 Part 4 - 验证
介绍 架构 初始化设置 注册 在模板中参考验证用户 测试注册视图 增加邮件字段 改进测试布局 改进注册模板 登出 为验证用户显示菜单 登录 登录未知字段错误 创建自定义模板标签 测试模板标签 密码重置 邮件控制后台 配置路由 密码重置视图 密码重置完成视图 密码重置确认视图 密码重置完成视图 密码修改视图 总结 Part 5 - Django ORM</description>
    </item>
    
    <item>
      <title>How to Use Hugo</title>
      <link>https://leijingwei.com/posts/how-to-use-hugo/</link>
      <pubDate>Sun, 17 Oct 2021 17:04:33 +0300</pubDate>
      
      <guid>https://leijingwei.com/posts/how-to-use-hugo/</guid>
      <description>brew install hugo hugo help hugo new posts/example.rmd hugo server -D hugo -D </description>
    </item>
    
    <item>
      <title>03 Gunicorn running</title>
      <link>https://leijingwei.com/posts/gunicorn-running/</link>
      <pubDate>Sun, 11 Apr 2021 21:38:22 +0800</pubDate>
      
      <guid>https://leijingwei.com/posts/gunicorn-running/</guid>
      <description>Basic Usage gunicorn [OPTIONS] [WSGI_APP] The general format of WSGI_APP here is the module name plus the variable name. After version 20.1.0, this place became a config file. For example: the file name is test.py
def app(environ, start_response): &amp;#34;&amp;#34;&amp;#34;Simplest possible application object&amp;#34;&amp;#34;&amp;#34; data = b&amp;#39;Hello, World!\n&amp;#39; status = &amp;#39;200 OK&amp;#39; response_headers = [ (&amp;#39;Content-type&amp;#39;, &amp;#39;text/plain&amp;#39;), (&amp;#39;Content-Length&amp;#39;, str(len(data))) ] start_response(status, response_headers) return iter([data]) At this point you want to start the program with the following command:</description>
    </item>
    
    <item>
      <title>02 Gunicorn installation</title>
      <link>https://leijingwei.com/posts/gunicorn-installation/</link>
      <pubDate>Sun, 11 Apr 2021 21:08:16 +0800</pubDate>
      
      <guid>https://leijingwei.com/posts/gunicorn-installation/</guid>
      <description>Installation Requirement ：Python 3.x &amp;gt;= 3.5 Install the latest gunicorn with the command as below：
pip install gunicorn Installation from source code pip install git+https://github.com/benoitc/gunicorn.git Installation DEV version from source code
pip install -U git+https://github.com/benoitc/gunicorn.git Async Workers If your application code may need to pause for a long time during request processing, you may also need to install Eventlet or Gevent. Check out the design documentation for details on when one of the other assist types needs to be considered.</description>
    </item>
    
    <item>
      <title>01 Gunicorn quick start</title>
      <link>https://leijingwei.com/posts/the-usage-of-gunicorn/</link>
      <pubDate>Sun, 11 Apr 2021 13:46:59 +0800</pubDate>
      
      <guid>https://leijingwei.com/posts/the-usage-of-gunicorn/</guid>
      <description>About Gunicorn is the abbreviation of Green Unicorn, a WSGI Http server for Python under Unix systems. Its advantage is that it is relatively simple and easy to use on other web frameworks, such as flask, Django, etc.
Install &amp;amp; Start pip install gunicorn Install gunicorn using the above command, then write a simple python script to start the service
# myapp.py def app(environ, start_response): data = b&amp;#34;Hello, World!\n&amp;#34; start_response(&amp;#34;200 OK&amp;#34;,[(&amp;#34;Content-Type&amp;#34;,&amp;#34;text/plain&amp;#34;),(&amp;#34;Content-Length&amp;#34;,str(len(data)))]) return iter([data]) # Start： gunicorn -w 4 myapp:app Console output：</description>
    </item>
    
    <item>
      <title>Install V2ray</title>
      <link>https://leijingwei.com/posts/install-v2ray/</link>
      <pubDate>Sat, 26 Dec 2020 13:46:59 +0800</pubDate>
      
      <guid>https://leijingwei.com/posts/install-v2ray/</guid>
      <description>I can not write this in Chinese , but I really want to write it down .
first please get an ECS or VPS which can visit the world outside of the wall.
CentOS 7.x + Debian Ubuntu 18.x + i choose Cent OS 8.3, so the following content is based on Cent OS 8.
second download the installation script by this command.
curl -O https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh then you will get a file which named &amp;lsquo;install-release.</description>
    </item>
    
    <item>
      <title>CentOS 8.3 upgrade default nginx</title>
      <link>https://leijingwei.com/posts/nginx-update-centos8/</link>
      <pubDate>Sat, 26 Dec 2020 00:03:47 +0800</pubDate>
      
      <guid>https://leijingwei.com/posts/nginx-update-centos8/</guid>
      <description>Add the repo of University of Science and Technology of China vim /etc/yum.repos.d/nginx.repo Add the contents to the file：
[nginx-mainline] name=nginx mainline repo baseurl=http://mirrors.ustc.edu.cn/nginx/mainline/centos/$releasever/$basearch/ gpgcheck=0 enabled=1 module_hotfixes=true Update the nginx yum update nginx Check the version of the nginx nginx -v </description>
    </item>
    
=======
    <image>
      <url>https://leijingwei.com/papermod-cover.png</url>
      <link>https://leijingwei.com/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 07 Oct 2022 00:56:07 +0800</lastBuildDate><atom:link href="https://leijingwei.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Use Ffmpeg</title>
      <link>https://leijingwei.com/posts/how-to-use-ffmpeg/</link>
      <pubDate>Fri, 07 Oct 2022 00:56:07 +0800</pubDate>
      
      <guid>https://leijingwei.com/posts/how-to-use-ffmpeg/</guid>
      <description></description>
    </item>
    
>>>>>>> 43d39f0 (A new theme)
  </channel>
</rss>
