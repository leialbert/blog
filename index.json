[{"content":"Before you install your proxy app on Aliyun ECS, you should do something to block the aliyun\u0026rsquo;s built-in services.\nrm -rf /etc/motd \u0026amp;\u0026gt;/dev/null rm -fr /usr/local/{aegis,qcloud,cloudmonitor} \u0026amp;\u0026gt;/dev/null rm -rf /lib/systemd/system/aliyun.service \u0026amp;\u0026gt;/dev/null mkdir /usr/local/{aegis,cloudmonitor,qcloud} killall -9 sgagent \u0026amp;\u0026gt;/dev/null killall -9 barad_agent \u0026amp;\u0026gt;/dev/null killall -9 aliyun_assist_update \u0026amp;\u0026gt;/dev/null killall -9 aliyun_assist_update \u0026amp;\u0026gt;/dev/null killall -9 AliSecureCheckAdvanced \u0026amp;\u0026gt;/dev/null killall -9 CmsGoAgent.linux-amd64 \u0026amp;\u0026gt;/dev/null kill -9 `pidof YDLive` \u0026amp;\u0026gt;/dev/null kill -9 `pidof YDService` \u0026amp;\u0026gt;/dev/null kill -9 `pidof wrapper` \u0026amp;\u0026gt;/dev/null kill -9 `pidof AliYunDun` \u0026amp;\u0026gt;/dev/null kill -9 `pidof AliYunDunUpdate` \u0026amp;\u0026gt;/dev/null Don\u0026rsquo;t forget to enable your firewall to block the untrust access.\nI am using the ufw to controll the firewall rules.\napt install ufw ufw enable vi /etc/default/ufw # make sure IPV6=yes is actived ufw default deny incoming # default deny all incoming connecttion ufw default allow outgoing # default allow all outgoing connection ufw allow 22/tcp # this is very important, don\u0026#39;t forget this. after you do some basic configurations with the ufw, you should block all Aliyun\u0026rsquo;s IPs.\nvi /etc/ufw/before.rules find ** # End required lines** , add the following contents into it.\n-A ufw-before-input -s 140.205.201.0/24 -j DROP -A ufw-before-input -s 140.205.201.0/28 -j DROP -A ufw-before-input -s 140.205.201.16/29 -j DROP -A ufw-before-input -s 140.205.201.32/28 -j DROP -A ufw-before-input -s 140.205.225.0/24 -j DROP -A ufw-before-input -s 140.205.225.192/29 -j DROP -A ufw-before-input -s 140.205.225.200/30 -j DROP -A ufw-before-input -s 140.205.225.184/29 -j DROP -A ufw-before-input -s 140.205.225.183/32 -j DROP -A ufw-before-input -s 140.205.225.206/32 -j DROP -A ufw-before-input -s 140.205.225.205/32 -j DROP -A ufw-before-input -s 140.205.225.195/32 -j DROP -A ufw-before-input -s 140.205.225.204/32 -j DROP -A ufw-before-input -s 106.11.224.0/26 -j DROP -A ufw-before-input -s 106.11.224.64/26 -j DROP -A ufw-before-input -s 106.11.224.128/26 -j DROP -A ufw-before-input -s 106.11.224.192/26 -j DROP -A ufw-before-input -s 106.11.222.64/26 -j DROP -A ufw-before-input -s 106.11.222.128/26 -j DROP -A ufw-before-input -s 106.11.222.192/26 -j DROP -A ufw-before-input -s 106.11.223.0/26 -j DROP -A ufw-before-input -s 112.124.127.224 -j DROP -A ufw-before-input -s 112.124.127.44 -j DROP -A ufw-before-input -s 112.124.127.64 -j DROP -A ufw-before-input -s 112.124.127.53 -j DROP -A ufw-before-input -s 120.26.216.168 -j DROP -A ufw-before-input -s 120.26.64.126 -j DROP -A ufw-before-input -s 121.43.107.174 -j DROP -A ufw-before-input -s 121.43.107.176 -j DROP -A ufw-before-input -s 121.41.117.242 -j DROP -A ufw-before-input -s 121.40.130.38 -j DROP -A ufw-before-input -s 121.41.112.148 -j DROP -A ufw-before-input -s 115.29.112.222 -j DROP -A ufw-before-input -s 115.28.203.70 -j DROP -A ufw-before-input -s 42.96.189.63 -j DROP -A ufw-before-input -s 115.29.113.101 -j DROP -A ufw-before-input -s 120.27.40.113 -j DROP -A ufw-before-input -s 115.28.171.22 -j DROP -A ufw-before-input -s 115.28.189.208 -j DROP -A ufw-before-input -s 121.42.196.232 -j DROP -A ufw-before-input -s 115.28.26.13 -j DROP -A ufw-before-input -s 120.27.47.144 -j DROP -A ufw-before-input -s 120.27.47.33 -j DROP -A ufw-before-input -s 112.126.74.55 -j DROP -A ufw-before-input -s 182.92.148.207 -j DROP -A ufw-before-input -s 182.92.1.233 -j DROP -A ufw-before-input -s 112.126.73.56 -j DROP -A ufw-before-input -s 123.56.138.37 -j DROP -A ufw-before-input -s 123.57.10.133 -j DROP -A ufw-before-input -s 112.126.75.174 -j DROP -A ufw-before-input -s 182.92.157.118 -j DROP -A ufw-before-input -s 112.126.75.221 -j DROP -A ufw-before-input -s 182.92.69.212 -j DROP -A ufw-before-input -s 10.153.174.11 -j DROP -A ufw-before-input -s 10.153.175.147 -j DROP -A ufw-before-input -s 10.153.175.146 -j DROP -A ufw-before-input -s 110.75.0.0/16 -j DROP -A ufw-before-input -s 42.120.0.0/16 -j DROP don\u0026rsquo;f forget reload your firewall with ufw.\nufw reload Now you can do anything you want.\n","permalink":"https://leijingwei.com/posts/remove-and-block-aliyun/","summary":"Before you install your proxy app on Aliyun ECS, you should do something to block the aliyun\u0026rsquo;s built-in services.\nrm -rf /etc/motd \u0026amp;\u0026gt;/dev/null rm -fr /usr/local/{aegis,qcloud,cloudmonitor} \u0026amp;\u0026gt;/dev/null rm -rf /lib/systemd/system/aliyun.service \u0026amp;\u0026gt;/dev/null mkdir /usr/local/{aegis,cloudmonitor,qcloud} killall -9 sgagent \u0026amp;\u0026gt;/dev/null killall -9 barad_agent \u0026amp;\u0026gt;/dev/null killall -9 aliyun_assist_update \u0026amp;\u0026gt;/dev/null killall -9 aliyun_assist_update \u0026amp;\u0026gt;/dev/null killall -9 AliSecureCheckAdvanced \u0026amp;\u0026gt;/dev/null killall -9 CmsGoAgent.linux-amd64 \u0026amp;\u0026gt;/dev/null kill -9 `pidof YDLive` \u0026amp;\u0026gt;/dev/null kill -9 `pidof YDService` \u0026amp;\u0026gt;/dev/null kill -9 `pidof wrapper` \u0026amp;\u0026gt;/dev/null kill -9 `pidof AliYunDun` \u0026amp;\u0026gt;/dev/null kill -9 `pidof AliYunDunUpdate` \u0026amp;\u0026gt;/dev/null Don\u0026rsquo;t forget to enable your firewall to block the untrust access.","title":"Remove and Block Aliyun"},{"content":"ffmpeg -version ffmpeg -i input.mp3 -t 30 output.mp3 ffmpeg -i input.mp3 -ss 00:00:04 -t 30 output.mp3 ","permalink":"https://leijingwei.com/posts/how-to-use-ffmpeg/","summary":"ffmpeg -version ffmpeg -i input.mp3 -t 30 output.mp3 ffmpeg -i input.mp3 -ss 00:00:04 -t 30 output.mp3 ","title":"How to Use Ffmpeg"},{"content":"hugo installlation brew install hugo hugo create site hugo new site leijingwei # a folder leijingwei will be created with a config.toml file hugo new site leijingwei -f yml # a folder leijingwei will be created with a config.yml file add a theme to your site Go to the https://themes.gohugo.io/ , find your favourite theme.\nhugo create post You will use this command to create a new post.\nhugo new posts/new-post.md And you will use the following contents to edit your post.\ntitle: \u0026#34;A New Start\u0026#34; draft: true author: \u0026#34;Jingwei Lei\u0026#34; date: 2022-10-07T01:45:59+08:00 description: \u0026#34;This is description\u0026#34; tags: [\u0026#34;markdown\u0026#34;, \u0026#34;css\u0026#34;, \u0026#34;html\u0026#34;, \u0026#34;themes\u0026#34;] categories: [\u0026#34;themes\u0026#34;, \u0026#34;syntax\u0026#34;] series: [\u0026#34;Themes Guide\u0026#34;] aliases: [\u0026#34;migrate-from-jekyl\u0026#34;] ShowToc: true TocOpen: true hugo generate static files hugo -D other hugo commands hugo server -D ","permalink":"https://leijingwei.com/posts/hugo-quick-start/","summary":"hugo installlation brew install hugo hugo create site hugo new site leijingwei # a folder leijingwei will be created with a config.toml file hugo new site leijingwei -f yml # a folder leijingwei will be created with a config.yml file add a theme to your site Go to the https://themes.gohugo.io/ , find your favourite theme.\nhugo create post You will use this command to create a new post.\nhugo new posts/new-post.","title":"Hugo Quick Start"},{"content":"Basic Usage gunicorn [OPTIONS] [WSGI_APP] The general format of WSGI_APP here is the module name plus the variable name. After version 20.1.0, this place became a config file. For example: the file name is test.py\ndef app(environ, start_response): \u0026#34;\u0026#34;\u0026#34;Simplest possible application object\u0026#34;\u0026#34;\u0026#34; data = b\u0026#39;Hello, World!\\n\u0026#39; status = \u0026#39;200 OK\u0026#39; response_headers = [ (\u0026#39;Content-type\u0026#39;, \u0026#39;text/plain\u0026#39;), (\u0026#39;Content-Length\u0026#39;, str(len(data))) ] start_response(status, response_headers) return iter([data]) At this point you want to start the program with the following command:\ngunicorn --workers=2 test:app The variable name here can also be a function call. For example, the above example can be changed to this:\ndef create_app(): app = FrameworkApp() ... return app Calling it like this has the same effect:\ngunicorn --workers=2 \u0026#39;test:create_app()\u0026#39; Common configuration parameters -c CONFIG, \u0026ndash;config=CONFIG [Define the path to the configuration file] -b BIND, \u0026ndash;bind=BIND [Define the server communication address and port] -w WORKERS, \u0026ndash;workers=WORKERS [Define the number of worker processes, which is about 2-4 per CPU configuration] -k WORKERCLASS \u0026ndash;worker-class=WORKERCLASS [What type of worker process to run. Can be set to one of (sync, eventlet, gevent, tornado, gthread.sync).] -n APP_NAME, \u0026ndash;name=APP_NAME [If enabled, you can set the process name.] For other parameters, please refer to the official documentation. Intergration Django If not defined, gunicorn will automatically call a WSGI application, such as a typical Django program. The format of gunicorn is as follows:\ngunicorn myproject.wsgi It\u0026rsquo;s pretty easy to deploy. It should be noted above that your project should be in the python PATH. The easiest way is to put it in the same directory as manage.py in the Django directory.\nThere is also a configuration, which can directly configure the content in Django settings:\ngunicorn --env DJANGO_SETTINGS_MODULE=myproject.settings myproject.wsgi Paste and deployment gunicorn --paste development.ini -b :8080 --chdir /path/to/project gunicorn --paste development.ini#admin -b :8080 --chdir /path/to/project ","permalink":"https://leijingwei.com/posts/gunicorn-running/","summary":"Basic Usage gunicorn [OPTIONS] [WSGI_APP] The general format of WSGI_APP here is the module name plus the variable name. After version 20.1.0, this place became a config file. For example: the file name is test.py\ndef app(environ, start_response): \u0026#34;\u0026#34;\u0026#34;Simplest possible application object\u0026#34;\u0026#34;\u0026#34; data = b\u0026#39;Hello, World!\\n\u0026#39; status = \u0026#39;200 OK\u0026#39; response_headers = [ (\u0026#39;Content-type\u0026#39;, \u0026#39;text/plain\u0026#39;), (\u0026#39;Content-Length\u0026#39;, str(len(data))) ] start_response(status, response_headers) return iter([data]) At this point you want to start the program with the following command:","title":"03 Gunicorn running"},{"content":"Installation Requirement ：Python 3.x \u0026gt;= 3.5 Install the latest gunicorn with the command as below：\npip install gunicorn Installation from source code pip install git+https://github.com/benoitc/gunicorn.git Installation DEV version from source code\npip install -U git+https://github.com/benoitc/gunicorn.git Async Workers If your application code may need to pause for a long time during request processing, you may also need to install Eventlet or Gevent. Check out the design documentation for details on when one of the other assist types needs to be considered.\n$ pip install greenlet # Required for both $ pip install eventlet # For eventlet workers $ pip install gunicorn[eventlet] # Or, using extra $ pip install gevent # For gevent workers $ pip install gunicorn[gevent] # Or, using extra Both will automatically install greenlet. If the installation fails, check if python-dev or libevent is installed.\nExtra package Some gunicorn options require additional package files, which you can install with [extra] when installing gunicorn.\ngunicorn[eventlet] - Eventlet-based greenlets workers gunicorn[gevent] - Gevent-based greenlets workers gunicorn[gthread] - Threaded workers gunicorn[tornado] - Tornado-based workers, not recommended（不推荐） If you run more than one instance of gunicorn, proc_name can help you to distinguish between ps or top commands.\ngunicorn[setproctitle] - set the name of the process You can use several expansion packs together, as follows: pip install gunicorn[gevent,setproctitle] ","permalink":"https://leijingwei.com/posts/gunicorn-installation/","summary":"Installation Requirement ：Python 3.x \u0026gt;= 3.5 Install the latest gunicorn with the command as below：\npip install gunicorn Installation from source code pip install git+https://github.com/benoitc/gunicorn.git Installation DEV version from source code\npip install -U git+https://github.com/benoitc/gunicorn.git Async Workers If your application code may need to pause for a long time during request processing, you may also need to install Eventlet or Gevent. Check out the design documentation for details on when one of the other assist types needs to be considered.","title":"02 Gunicorn installation"},{"content":"About Gunicorn is the abbreviation of Green Unicorn, a WSGI Http server for Python under Unix systems. Its advantage is that it is relatively simple and easy to use on other web frameworks, such as flask, Django, etc.\nInstall \u0026amp; Start pip install gunicorn Install gunicorn using the above command, then write a simple python script to start the service\n# myapp.py def app(environ, start_response): data = b\u0026#34;Hello, World!\\n\u0026#34; start_response(\u0026#34;200 OK\u0026#34;,[(\u0026#34;Content-Type\u0026#34;,\u0026#34;text/plain\u0026#34;),(\u0026#34;Content-Length\u0026#34;,str(len(data)))]) return iter([data]) # Start： gunicorn -w 4 myapp:app Console output：\n[2021-04-11 20:59:22 +0800] [32842] [INFO] Starting gunicorn 20.1.0 [2021-04-11 20:59:22 +0800] [32842] [INFO] Listening at: http://127.0.0.1:8000 (32842) [2021-04-11 20:59:22 +0800] [32842] [INFO] Using worker: sync [2021-04-11 20:59:22 +0800] [32844] [INFO] Booting worker with pid: 32844 [2021-04-11 20:59:22 +0800] [32845] [INFO] Booting worker with pid: 32845 [2021-04-11 20:59:22 +0800] [32846] [INFO] Booting worker with pid: 32846 [2021-04-11 20:59:22 +0800] [32847] [INFO] Booting worker with pid: 32847 Deploy Gunicorn is a WSGI HTTP server. When using Gunicorn, it is best to put it behind an HTTP proxy server. The official recommendation is to use Nginx. A simple Nginx configuration is as follows:\nserver { listen 80; server_name example.org; access_log /var/log/nginx/example.log; location / { proxy_pass http://127.0.0.1:8000; proxy_set_header Host $host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; } } Here, Nginx is set up as a reverse proxy server for the Gunicorn server running on localhost port 8000.\n","permalink":"https://leijingwei.com/posts/the-usage-of-gunicorn/","summary":"About Gunicorn is the abbreviation of Green Unicorn, a WSGI Http server for Python under Unix systems. Its advantage is that it is relatively simple and easy to use on other web frameworks, such as flask, Django, etc.\nInstall \u0026amp; Start pip install gunicorn Install gunicorn using the above command, then write a simple python script to start the service\n# myapp.py def app(environ, start_response): data = b\u0026#34;Hello, World!\\n\u0026#34; start_response(\u0026#34;200 OK\u0026#34;,[(\u0026#34;Content-Type\u0026#34;,\u0026#34;text/plain\u0026#34;),(\u0026#34;Content-Length\u0026#34;,str(len(data)))]) return iter([data]) # Start： gunicorn -w 4 myapp:app Console output：","title":"01 Gunicorn quick start"},{"content":"I can not write this in Chinese , but I really want to write it down .\nfirst please get an ECS or VPS which can visit the world outside of the wall.\nCentOS 7.x + Debian Ubuntu 18.x + i choose Cent OS 8.3, so the following content is based on Cent OS 8.\nsecond download the installation script by this command.\ncurl -O https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh then you will get a file which named \u0026lsquo;install-release.sh\u0026rsquo;\nrun this script.\nbash install-release.sh third after the installation , we should do some configuration for v2ray.\nadd the v2ray service to startup list systemctl enable v2ray start the v2ray service systemctl start v2ray fourth at last , we should config our server and client.\nunluckly , most people don\u0026rsquo;t know how to set the configration file. Actually , there is no need to know too much about it , you just need to know how to copy and modify my code.\nfor server the config.json file is located in /usr/local/etc/v2ray/ here.\n{ \u0026#34;log\u0026#34;:{ \u0026#34;loglevel\u0026#34;:\u0026#34;warnning\u0026#34;, \u0026#34;access\u0026#34;:\u0026#34;/var/log/v2ray/access.log\u0026#34;, \u0026#34;error\u0026#34;:\u0026#34;/var/log/v2ray/error.log\u0026#34; }, \u0026#34;inbounds\u0026#34;: [ { \u0026#34;port\u0026#34;: 1027, \u0026#34;protocol\u0026#34;: \u0026#34;vmess\u0026#34;, \u0026#34;settings\u0026#34;: { \u0026#34;clients\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;39f91024-f331-46d8-90e5-4046a05bea77\u0026#34;, \u0026#34;alterId\u0026#34;: 64 } ] } } ], \u0026#34;outbounds\u0026#34;: [ { \u0026#34;protocol\u0026#34;: \u0026#34;freedom\u0026#34;, \u0026#34;settings\u0026#34;: {} } ] } for client { \u0026#34;log\u0026#34;: { \u0026#34;error\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;loglevel\u0026#34;: \u0026#34;info\u0026#34;, \u0026#34;access\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;inbounds\u0026#34;: [ { \u0026#34;listen\u0026#34;: \u0026#34;127.0.0.1\u0026#34;, \u0026#34;protocol\u0026#34;: \u0026#34;socks\u0026#34;, \u0026#34;settings\u0026#34;: { \u0026#34;udp\u0026#34;: false, \u0026#34;auth\u0026#34;: \u0026#34;noauth\u0026#34; }, \u0026#34;port\u0026#34;: \u0026#34;1080\u0026#34; }, { \u0026#34;listen\u0026#34;: \u0026#34;127.0.0.1\u0026#34;, \u0026#34;protocol\u0026#34;: \u0026#34;http\u0026#34;, \u0026#34;settings\u0026#34;: { \u0026#34;timeout\u0026#34;: 360 }, \u0026#34;port\u0026#34;: \u0026#34;1087\u0026#34; } ], \u0026#34;outbounds\u0026#34;: [ { \u0026#34;mux\u0026#34;: { \u0026#34;enabled\u0026#34;: false, \u0026#34;concurrency\u0026#34;: 8 }, \u0026#34;protocol\u0026#34;: \u0026#34;vmess\u0026#34;, \u0026#34;streamSettings\u0026#34;: { \u0026#34;tcpSettings\u0026#34;: { \u0026#34;header\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;none\u0026#34; } }, \u0026#34;tlsSettings\u0026#34;: { \u0026#34;allowInsecure\u0026#34;: true }, \u0026#34;security\u0026#34;: \u0026#34;none\u0026#34;, \u0026#34;network\u0026#34;: \u0026#34;tcp\u0026#34; }, \u0026#34;tag\u0026#34;: \u0026#34;proxy\u0026#34;, \u0026#34;settings\u0026#34;: { \u0026#34;vnext\u0026#34;: [ { \u0026#34;address\u0026#34;: \u0026#34;8.210.228.39\u0026#34;, \u0026#34;users\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;39f91024-f331-46d8-90e5-4046a05bea77\u0026#34;, \u0026#34;alterId\u0026#34;: 64, \u0026#34;level\u0026#34;: 0, \u0026#34;security\u0026#34;: \u0026#34;auto\u0026#34; } ], \u0026#34;port\u0026#34;: 1027 } ] } } ], \u0026#34;dns\u0026#34;: {}, \u0026#34;routing\u0026#34;: { \u0026#34;settings\u0026#34;: { \u0026#34;domainStrategy\u0026#34;: \u0026#34;AsIs\u0026#34;, \u0026#34;rules\u0026#34;: [] } }, \u0026#34;transport\u0026#34;: {} } you just need to change the id ,port and IP address to your owns, but make sure that client are the same with server.\nto get the uuid ,you can use this command on Cent OS.\ncat /proc/sys/kernel/random/uuid or you can visit the website to get one uuid.\nuuid generator\nfifth done.\n","permalink":"https://leijingwei.com/posts/install-v2ray/","summary":"I can not write this in Chinese , but I really want to write it down .\nfirst please get an ECS or VPS which can visit the world outside of the wall.\nCentOS 7.x + Debian Ubuntu 18.x + i choose Cent OS 8.3, so the following content is based on Cent OS 8.\nsecond download the installation script by this command.\ncurl -O https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh then you will get a file which named \u0026lsquo;install-release.","title":"Install V2ray"},{"content":"Add the repo of University of Science and Technology of China vim /etc/yum.repos.d/nginx.repo Add the contents to the file：\n[nginx-mainline] name=nginx mainline repo baseurl=http://mirrors.ustc.edu.cn/nginx/mainline/centos/$releasever/$basearch/ gpgcheck=0 enabled=1 module_hotfixes=true Update the nginx yum update nginx Check the version of the nginx nginx -v ","permalink":"https://leijingwei.com/posts/nginx-update-centos8/","summary":"Add the repo of University of Science and Technology of China vim /etc/yum.repos.d/nginx.repo Add the contents to the file：\n[nginx-mainline] name=nginx mainline repo baseurl=http://mirrors.ustc.edu.cn/nginx/mainline/centos/$releasever/$basearch/ gpgcheck=0 enabled=1 module_hotfixes=true Update the nginx yum update nginx Check the version of the nginx nginx -v ","title":"CentOS 8.3 upgrade default nginx"}]